{"version":3,"sources":["components/common/PageTitle.js","util/index.js","components/DashboardMetric.js","components/DashboardChart.js","pages/Dashboard.js"],"names":["PageTitle","title","className","formatCurrency","num","toString","replace","DashboardMetric","value","icon","DashboardChart","salesData","chartLabels","map","sale","date","chartValues","amount","height","data","canvas","gradientFill","getContext","createLinearGradient","addColorStop","labels","datasets","label","borderColor","backgroundColor","options","elements","line","tension","borderWidth","point","radius","scales","yAxes","ticks","callback","Dashboard","fetchContext","useContext","FetchContext","useState","dashboardData","setDashboardData","useEffect","a","authAxios","get","console","log","getDashboardData","salesVolume","faChartArea","newCustomers","faUserPlus","refunds","faDollarSign","Card","graphData"],"mappings":"8GAAA,oBAUeA,IARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,oCACXD,M,iCCLP,kCAAO,IAAME,EAAiB,SAAAC,GAC5B,MAAM,IAAN,OAAWA,EACRC,WACAC,QAAQ,0BAA2B,U,6GCYzBC,EAZS,SAAC,GAA4B,IAA1BN,EAAyB,EAAzBA,MAAOO,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvC,OACE,yBAAKP,UAAU,gEACb,uBAAGA,UAAU,mCACX,kBAAC,IAAD,CAAiBO,KAAMA,EAAMP,UAAU,SACtCD,GAEH,uBAAGC,UAAU,oCAAoCM,K,0CC+CxCE,EArDQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClBC,EAAcD,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACzCC,EAAcL,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKG,UAyB/C,OACE,kBAAC,IAAD,CACEC,OAAQ,IACRC,KA1Bc,SAAAC,GAChB,IACIC,EADQD,EAAOE,WAAW,MACPC,qBACrB,EACA,EACA,EACA,KAIF,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,wBACtB,CACLC,OAAQb,EACRc,SAAU,CACR,CACEC,MAAO,QACPC,YAAa,UACbT,KAAMH,EACNa,gBAAiBR,MAUrBS,QAAS,CACPC,SAAU,CACRC,KAAM,CACJC,QAAS,GACTC,YAAa,KAEfC,MAAO,CAAEC,OAAQ,IAEnBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,SAAU,SAAAhC,GAAK,OAAIL,YAAeK,YCsCnCiC,UApEG,WAChB,IAAMC,EAAeC,qBAAWC,KADV,EAEoBC,qBAFpB,mBAEfC,EAFe,KAEAC,EAFA,KAmBtB,OAfAC,qBAAU,YACc,uCAAG,8BAAAC,EAAA,+EAEEP,EAAaQ,UAAUC,IAC5C,kBAHmB,gBAEbhC,EAFa,EAEbA,KAGR4B,EAAiB5B,GALI,gDAOrBiC,QAAQC,IAAR,MAPqB,yDAAH,qDAWtBC,KACC,CAACZ,IAGF,oCACE,kBAAC1C,EAAA,EAAD,CAAWC,MAAM,cAChB6C,EACC,oCACE,yBAAK5C,UAAU,kCACb,yBAAKA,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,eACNO,MAAOL,YACL2C,EAAcS,aAEhB9C,KAAM+C,OAGV,yBAAKtD,UAAU,gDACb,kBAAC,EAAD,CACED,MAAM,gBACNO,MAAOsC,EAAcW,aACrBhD,KAAMiD,OAGV,yBAAKxD,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,UACNO,MAAOL,YACL2C,EAAca,SAEhBlD,KAAMmD,QAIZ,yBAAK1D,UAAU,eACb,kBAAC2D,EAAA,EAAD,KACGf,GACC,kBAAC,EAAD,CACEnC,UAAWmC,EAAcgB,eAOnC","file":"static/js/4.98cde8a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageTitle = ({ title }) => (\r\n  <div className=\"my-1 sm:my-4\">\r\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\r\n      {title}\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default PageTitle;\r\n","export const formatCurrency = num => {\r\n  return `#${num\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst DashboardMetric = ({ title, value, icon }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-4 border-t-4 border-blue-500\">\r\n      <p className=\"text-gray-600 uppercase text-xs\">\r\n        <FontAwesomeIcon icon={icon} className=\"mr-2\" />\r\n        {title}\r\n      </p>\r\n      <p className=\"text-3xl text-blue-600 font-bold\">{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMetric;\r\n","import React from 'react';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\nimport { formatCurrency } from './../util';\r\n\r\nconst DashboardChart = ({ salesData }) => {\r\n  const chartLabels = salesData.map(sale => sale.date);\r\n  const chartValues = salesData.map(sale => sale.amount);\r\n\r\n  const chartData = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    var gradientFill = ctx.createLinearGradient(\r\n      0,\r\n      0,\r\n      0,\r\n      250\r\n    );\r\n    gradientFill.addColorStop(0, 'rgba(0, 97, 215, 0.3)');\r\n    gradientFill.addColorStop(1, 'rgba(0, 200, 255, 0)');\r\n    return {\r\n      labels: chartLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Sales',\r\n          borderColor: '#3182ce',\r\n          data: chartValues,\r\n          backgroundColor: gradientFill\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <LineChart\r\n      height={100}\r\n      data={chartData}\r\n      options={{\r\n        elements: {\r\n          line: {\r\n            tension: 0.3,\r\n            borderWidth: 1.5\r\n          },\r\n          point: { radius: 0 }\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                callback: value => formatCurrency(value)\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DashboardChart;\r\n","import React, {\r\n  useState,\r\n  useContext,\r\n  useEffect\r\n} from 'react';\r\nimport PageTitle from '../components/common/PageTitle';\r\nimport DashboardMetric from './../components/DashboardMetric';\r\nimport Card from '../components/common/Card';\r\nimport {\r\n  faChartArea,\r\n  faDollarSign,\r\n  faUserPlus\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FetchContext } from '../context/FetchContext';\r\nimport { formatCurrency } from './../util';\r\nimport DashboardChart from './../components/DashboardChart';\r\n\r\nconst Dashboard = () => {\r\n  const fetchContext = useContext(FetchContext);\r\n  const [dashboardData, setDashboardData] = useState();\r\n\r\n  useEffect(() => {\r\n    const getDashboardData = async () => {\r\n      try {\r\n        const { data } = await fetchContext.authAxios.get(\r\n          'dashboard-data'\r\n        );\r\n        setDashboardData(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getDashboardData();\r\n  }, [fetchContext]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" />\r\n      {dashboardData ? (\r\n        <>\r\n          <div className=\"mb-4 flex flex-col sm:flex-row\">\r\n            <div className=\"w-full sm:w-1/3 sm:mr-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"Sales Volume\"\r\n                value={formatCurrency(\r\n                  dashboardData.salesVolume\r\n                )}\r\n                icon={faChartArea}\r\n              />\r\n            </div>\r\n            <div className=\"w-full sm:w-1/3 sm:ml-2 sm:mr-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"New Customers\"\r\n                value={dashboardData.newCustomers}\r\n                icon={faUserPlus}\r\n              />\r\n            </div>\r\n            <div className=\"w-full sm:w-1/3 sm:ml-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"Refunds\"\r\n                value={formatCurrency(\r\n                  dashboardData.refunds\r\n                )}\r\n                icon={faDollarSign}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full mt-4\">\r\n            <Card>\r\n              {dashboardData && (\r\n                <DashboardChart\r\n                  salesData={dashboardData.graphData}\r\n                />\r\n              )}\r\n            </Card>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}