{"version":3,"sources":["components/common/PageTitle.js","util/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/InventoryItemForm.js","components/common/DangerButton.js","pages/Inventory.js"],"names":["PageTitle","title","className","formatCurrency","num","toString","replace","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","InventoryItemSchema","Yup","shape","name","required","itemNumber","unitPrice","InventoryItemForm","onSubmit","initialValues","values","resetForm","validationSchema","validateOnBlur","Label","text","FormInput","ariaLabel","type","placeholder","GradientButton","DangerButton","onClick","InventoryItemContainer","children","InventoryItem","item","onDelete","src","image","alt","NewInventoryItem","Inventory","fetchContext","useContext","FetchContext","useState","inventory","setInventory","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","a","authAxios","get","data","console","log","getInventory","post","inventoryItem","message","response","window","confirm","delete","_id","filter","deletedItem","FormSuccess","FormError","length","map","key"],"mappings":"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","file":"static/js/5.0e636afd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageTitle = ({ title }) => (\r\n  <div className=\"my-1 sm:my-4\">\r\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\r\n      {title}\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default PageTitle;\r\n","export const formatCurrency = num => {\r\n  return `#${num\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\r\n};\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Label from './../components/common/Label';\r\nimport FormInput from './../components/FormInput';\r\nimport GradientButton from './common/GradientButton';\r\n\r\nconst InventoryItemSchema = Yup.object().shape({\r\n  name: Yup.string().required('Name is required'),\r\n  itemNumber: Yup.string().required(\r\n    'Item number is required'\r\n  ),\r\n  unitPrice: Yup.string().required('Unit price is required')\r\n});\r\n\r\nconst InventoryItemForm = ({ onSubmit }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        itemNumber: '',\r\n        unitPrice: ''\r\n      }}\r\n      onSubmit={(values, { resetForm }) =>\r\n        onSubmit(values, resetForm)\r\n      }\r\n      validationSchema={InventoryItemSchema}\r\n      validateOnBlur={false}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <div className=\"flex flex-col md:flex-row\">\r\n            <div className=\"w-full md:w-1/3 mr-2 mb-2 sm:mb-0\">\r\n              <div className=\"mb-1\">\r\n                <Label text=\"Item Name\" />\r\n              </div>\r\n              <FormInput\r\n                ariaLabel=\"Name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Item Name\"\r\n              />\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 mr-2 mb-2 sm:mb-0\">\r\n              <div className=\"mb-1\">\r\n                <Label text=\"Item Number\" />\r\n              </div>\r\n              <FormInput\r\n                ariaLabel=\"Item Number\"\r\n                name=\"itemNumber\"\r\n                type=\"text\"\r\n                placeholder=\"Item Number\"\r\n              />\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 mr-2 mb-2 sm:mb-0\">\r\n              <div className=\"mb-1\">\r\n                <Label text=\"Unit Price\" />\r\n              </div>\r\n              <FormInput\r\n                ariaLabel=\"Unit Price\"\r\n                name=\"unitPrice\"\r\n                type=\"number\"\r\n                placeholder=\"Unit Price\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div className=\"w-full sm:w-1/4 mt-4\">\r\n              <GradientButton type=\"submit\" text=\"Submit\" />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default InventoryItemForm;\r\n","import React from 'react';\r\n\r\nconst DangerButton = ({ text, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className=\"text-red-600 text-sm rounded border border-red-600 px-2 hover:text-white hover:bg-red-600\"\r\n  >\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default DangerButton;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport PageTitle from '../components/common/PageTitle';\r\nimport { FetchContext } from '../context/FetchContext';\r\nimport { formatCurrency } from './../util';\r\nimport InventoryItemForm from './../components/InventoryItemForm';\r\nimport DangerButton from './../components/common/DangerButton';\r\nimport FormError from './../components/FormError';\r\nimport FormSuccess from './../components/FormSuccess';\r\n\r\nconst InventoryItemContainer = ({ children }) => (\r\n  <div className=\"bg-white rounded shadow-md mb-4 p-4\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst InventoryItem = ({ item, onDelete }) => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <img\r\n        className=\"rounded w-32 h-full\"\r\n        src={item.image}\r\n        alt=\"inventory\"\r\n      />\r\n      <div className=\"flex justify-between w-full\">\r\n        <div className=\"flex flex-col ml-4 justify-between\">\r\n          <div>\r\n            <p className=\"font-bold text-xl text-gray-900\">\r\n              {item.name}\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">\r\n              {item.itemNumber}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-gray-700 text-xl\">\r\n              {formatCurrency(item.unitPrice)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"self-end\">\r\n          <DangerButton\r\n            text=\"Delete\"\r\n            onClick={() => onDelete(item)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewInventoryItem = ({ onSubmit }) => {\r\n  return (\r\n    <section className=\"bg-white p-4 shadow-md rounded-md\">\r\n      <p className=\"font-bold mb-2\">New Inventory Item</p>\r\n      <InventoryItemForm onSubmit={onSubmit} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Inventory = () => {\r\n  const fetchContext = useContext(FetchContext);\r\n  const [inventory, setInventory] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  useEffect(() => {\r\n    const getInventory = async () => {\r\n      try {\r\n        const { data } = await fetchContext.authAxios.get(\r\n          'inventory'\r\n        );\r\n        setInventory(data);\r\n      } catch (err) {\r\n        console.log('the err', err);\r\n      }\r\n    };\r\n\r\n    getInventory();\r\n  }, [fetchContext]);\r\n\r\n  const onSubmit = async (values, resetForm) => {\r\n    try {\r\n      const { data } = await fetchContext.authAxios.post(\r\n        'inventory',\r\n        values\r\n      );\r\n      setInventory([...inventory, data.inventoryItem]);\r\n      resetForm();\r\n      setSuccessMessage(data.message);\r\n      setErrorMessage(null);\r\n    } catch (err) {\r\n      const { data } = err.response;\r\n      setSuccessMessage(null);\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  const onDelete = async item => {\r\n    try {\r\n      if (\r\n        window.confirm(\r\n          'Are you sure you want to delete this item?'\r\n        )\r\n      ) {\r\n        const {\r\n          data\r\n        } = await fetchContext.authAxios.delete(\r\n          `inventory/${item._id}`\r\n        );\r\n        setInventory(\r\n          inventory.filter(\r\n            item => item._id !== data.deletedItem._id\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      const { data } = err.response;\r\n      setErrorMessage(data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Inventory\" />\r\n      {successMessage && (\r\n        <FormSuccess text={successMessage} />\r\n      )}\r\n      {errorMessage && <FormError text={errorMessage} />}\r\n      <div className=\"mb-4\">\r\n        <NewInventoryItem onSubmit={onSubmit} />\r\n      </div>\r\n      {inventory && inventory.length\r\n        ? inventory.map(item => (\r\n            <InventoryItemContainer key={item._id}>\r\n              <InventoryItem\r\n                item={item}\r\n                onDelete={onDelete}\r\n              />\r\n            </InventoryItemContainer>\r\n          ))\r\n        : 'No Inventory Items'}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"],"sourceRoot":""}